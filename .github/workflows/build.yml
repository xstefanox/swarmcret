name: "Build"

on:
  push:
    branches:
      - "**"

jobs:

  build:
    name: "Docker image (${{ matrix.platform.name }})"
    strategy:
      matrix:
        platform:
          - name: linux/amd64
            runner: ubicloud-standard-2
          - name: linux/arm64
            runner: ubicloud-standard-2-arm
    runs-on: ${{ matrix.platform.runner }}

    steps:

      - name: "Setup"
        run: |
          PLATFORM=${{ matrix.platform.name }}
          PLATFORM_TAG=${PLATFORM/\//-}
          echo PLATFORM_TAG=${PLATFORM_TAG} >> $GITHUB_ENV

      - name: "Checkout"
        uses: actions/checkout@v4

      - name: "Short SHA calculation"
        uses: benjlevesque/short-sha@v3.0

      - name: "GitHub Container Registry authentication"
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: "Docker Buildx setup"
        uses: docker/setup-buildx-action@v3

      - name: "Docker image build"
        uses: docker/bake-action@v6
        env:
          SHA: ${{ env.SHA }}
          PLATFORM_TAG: ${{ env.PLATFORM_TAG }}
        with:
          push: true
          files: docker-bake.hcl
          targets: |
            default
            alpine
          set: |
            *.platform=${{ matrix.platform.name }}

  multiarch:
    name: "Multiarch Docker image"
    runs-on: ubuntu-latest
    needs:
      - build
    steps:

      - name: "Setup"
        run: |
          DEFAULT_BRANCH_NAME=${{ github.event.repository.default_branch }}
          BRANCH_NAME=${{ github.ref_name }}
          SANITIZED_BRANCH_NAME=${BRANCH_NAME/\//-}
          DOCKERHUB_IMAGE=${{ github.repository }}
          GHCR_IMAGE=ghcr.io/${DOCKERHUB_IMAGE}

          if [[ ${DEFAULT_BRANCH_NAME} == ${BRANCH_NAME} ]]
          then
            DEFAULT_LATEST_TAG=latest
            ALPINE_LATEST_TAG=alpine
          else
            DEFAULT_LATEST_TAG=${SANITIZED_BRANCH_NAME}
            ALPINE_LATEST_TAG=${SANITIZED_BRANCH_NAME}-alpine
          fi
          
          echo GHCR_IMAGE=${GHCR_IMAGE} >> ${GITHUB_ENV}
          echo DOCKERHUB_IMAGE=${DOCKERHUB_IMAGE} >> ${GITHUB_ENV}
          echo DEFAULT_LATEST_TAG=${DEFAULT_LATEST_TAG} >> ${GITHUB_ENV}
          echo ALPINE_LATEST_TAG=${ALPINE_LATEST_TAG} >> ${GITHUB_ENV}

      - name: "Short SHA calculation"
        uses: benjlevesque/short-sha@v3.0

      - name: "Docker Buildx setup"
        uses: docker/setup-buildx-action@v3

      - name: "GitHub Container Registry authentication"
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: "Image creation"
        run: >
          docker buildx imagetools create
          --tag ${{ env.GHCR_IMAGE }}:${{ env.SHA }}
          ${{ env.GHCR_IMAGE }}:${{ env.SHA }}-linux-amd64-default
          ${{ env.GHCR_IMAGE }}:${{ env.SHA }}-linux-arm64-default

          docker buildx imagetools create
          --tag ${{ env.GHCR_IMAGE }}:${{ env.SHA }}-alpine
          ${{ env.GHCR_IMAGE }}:${{ env.SHA }}-linux-amd64-alpine
          ${{ env.GHCR_IMAGE }}:${{ env.SHA }}-linux-arm64-alpine
          
          docker buildx imagetools create
          --tag ${{ env.GHCR_IMAGE }}:${{ env.DEFAULT_LATEST_TAG }}
          ${{ env.GHCR_IMAGE }}:${{ env.SHA }}
          
          docker buildx imagetools create
          --tag ${{ env.GHCR_IMAGE }}:${{ env.ALPINE_LATEST_TAG }}
          ${{ env.GHCR_IMAGE }}:${{ env.SHA }}-alpine

      - name: "Login to DockerHub"
        uses: docker/login-action@v3
        if: github.ref_name == github.event.repository.default_branch
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: "Image publication"
        if: github.ref_name == github.event.repository.default_branch
        run: >
          docker buildx imagetools create
          --tag ${{ env.DOCKERHUB_IMAGE }}:${{ env.DEFAULT_LATEST_TAG }}
          ${{ env.GHCR_IMAGE }}:${{ env.DEFAULT_LATEST_TAG }}
          
          docker buildx imagetools create
          --tag ${{ env.DOCKERHUB_IMAGE }}:${{ env.ALPINE_LATEST_TAG }}
          ${{ env.GHCR_IMAGE }}:${{ env.ALPINE_LATEST_TAG }}
