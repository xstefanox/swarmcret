name: "Build"

on:
  push:
    branches:
      - "**"

jobs:

  setup:
    name: "Setup"
    runs-on: ubuntu-latest
    outputs:
      ghcrImage: ${{ steps.env.outputs.GHCR_IMAGE }}
      dockerHubImage: ${{ steps.env.outputs.DOCKERHUB_IMAGE }}
      defaultLatestTag: ${{ steps.env.outputs.DEFAULT_LATEST_TAG }}
      alpineLatestTag: ${{ steps.env.outputs.ALPINE_LATEST_TAG }}
      shortSha: ${{ steps.shortSha.outputs.sha }}
    steps:

      - name: "Environment variables"
        id: env
        run: |
          DEFAULT_BRANCH_NAME=${{ github.event.repository.default_branch }}
          BRANCH_NAME=${{ github.ref_name }}
          SANITIZED_BRANCH_NAME=${BRANCH_NAME/\//-}
          DOCKERHUB_IMAGE=${{ github.repository }}
          GHCR_IMAGE=ghcr.io/${DOCKERHUB_IMAGE}

          if [[ ${DEFAULT_BRANCH_NAME} == ${BRANCH_NAME} ]]
          then
            DEFAULT_LATEST_TAG=latest
            ALPINE_LATEST_TAG=alpine
          else
            DEFAULT_LATEST_TAG=${SANITIZED_BRANCH_NAME}
            ALPINE_LATEST_TAG=${SANITIZED_BRANCH_NAME}-alpine
          fi
          
          echo GHCR_IMAGE=${GHCR_IMAGE} >> ${GITHUB_OUTPUT}
          echo DOCKERHUB_IMAGE=${DOCKERHUB_IMAGE} >> ${GITHUB_OUTPUT}
          echo DEFAULT_LATEST_TAG=${DEFAULT_LATEST_TAG} >> ${GITHUB_OUTPUT}
          echo ALPINE_LATEST_TAG=${ALPINE_LATEST_TAG} >> ${GITHUB_OUTPUT}

      - name: "Short SHA calculation"
        id: shortSha
        uses: benjlevesque/short-sha@v3.0

  build:
    name: "Docker image (${{ matrix.platform.name }})"
    runs-on: ${{ matrix.platform.runner }}
    needs:
      - setup
    strategy:
      matrix:
        platform:
          - name: linux/amd64
            runner: ubicloud-standard-2
          - name: linux/arm64
            runner: ubicloud-standard-2-arm

    steps:

      - name: "Setup"
        run: |
          PLATFORM=${{ matrix.platform.name }}
          PLATFORM_TAG=${PLATFORM/\//-}
          echo PLATFORM_TAG=${PLATFORM_TAG} >> $GITHUB_ENV

      - name: "Checkout"
        uses: actions/checkout@v4

      - name: "GitHub Container Registry authentication"
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: "Docker Buildx setup"
        uses: docker/setup-buildx-action@v3

      - name: "Docker image build"
        uses: docker/bake-action@v6
        env:
          BASE_IMAGE_NAME: ${{ needs.setup.outputs.ghcrImage }}:${{ needs.setup.outputs.shortSha }}-${{ env.PLATFORM_TAG }}
        with:
          push: true
          files: docker-bake.hcl
          targets: |
            default
            alpine
          set: |
            *.platform=${{ matrix.platform.name }}

  multiarch:
    name: "Multiarch Docker image"
    runs-on: ubuntu-latest
    needs:
      - setup
      - build
    steps:

      - name: "Docker Buildx setup"
        uses: docker/setup-buildx-action@v3

      - name: "GitHub Container Registry authentication"
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: "Image creation"
        run: >
          SHA=${{ needs.setup.outputs.shortSha }}
          GHCR_IMAGE=${{ needs.setup.outputs.ghcrImage }}
          DEFAULT_LATEST_TAG=${{ needs.setup.outputs.defaultLatestTag }}
          ALPINE_LATEST_TAG=${{ needs.setup.outputs.alpineLatestTag }}

          docker buildx imagetools create
          --tag ${GHCR_IMAGE}:${SHA}
          ${GHCR_IMAGE}:${SHA}-linux-amd64-default
          ${GHCR_IMAGE}:${SHA}-linux-arm64-default

          docker buildx imagetools create
          --tag ${GHCR_IMAGE}:${SHA}-alpine
          ${GHCR_IMAGE}:${SHA}-linux-amd64-alpine
          ${GHCR_IMAGE}:${SHA}-linux-arm64-alpine
          
          docker buildx imagetools create
          --tag ${GHCR_IMAGE}:${DEFAULT_LATEST_TAG}
          ${GHCR_IMAGE}:${SHA}
          
          docker buildx imagetools create
          --tag ${GHCR_IMAGE}:${ALPINE_LATEST_TAG}
          ${GHCR_IMAGE}:${SHA}-alpine

      - name: "Login to DockerHub"
        uses: docker/login-action@v3
        if: github.ref_name == github.event.repository.default_branch
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: "Image publication"
        if: github.ref_name == github.event.repository.default_branch
        run: >
          GHCR_IMAGE=${{ needs.setup.outputs.ghcrImage }}
          DOCKERHUB_IMAGE=${{ needs.setup.outputs.dockerHubImage }}
          DEFAULT_LATEST_TAG=${{ needs.setup.outputs.defaultLatestTag }}
          ALPINE_LATEST_TAG=${{ needs.setup.outputs.alpineLatestTag }}
          
          docker buildx imagetools create
          --tag ${DOCKERHUB_IMAGE}:${DEFAULT_LATEST_TAG}
          ${GHCR_IMAGE}:${DEFAULT_LATEST_TAG}
          
          docker buildx imagetools create
          --tag ${DOCKERHUB_IMAGE}:${ALPINE_LATEST_TAG}
          ${GHCR_IMAGE}:${ALPINE_LATEST_TAG}
